{"ast":null,"code":"import { toggleClass } from '../../toggle-class.service';\nimport * as i0 from \"@angular/core\";\nexport let ComponentSeventeen = /*#__PURE__*/(() => {\n  class ComponentSeventeen {\n    constructor(zone, el, cd) {\n      this.zone = zone;\n      this.el = el;\n      this.cd = cd;\n    }\n    ngOnInit() {\n      this.model.subscribe(() => {\n        this.cd.markForCheck();\n        toggleClass(this.el, this.zone, 'checked-observable');\n      });\n    }\n    ngAfterViewChecked() {\n      toggleClass(this.el, this.zone);\n    }\n  }\n  ComponentSeventeen.ɵfac = function ComponentSeventeen_Factory(t) {\n    return new (t || ComponentSeventeen)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  ComponentSeventeen.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ComponentSeventeen,\n    selectors: [[\"cmp-seventeen\"]],\n    inputs: {\n      model: \"model\"\n    },\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"on-push\", \"subscriber\"]],\n    template: function ComponentSeventeen_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"a\", 0);\n        i0.ɵɵtext(1, \"Cmp17\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return ComponentSeventeen;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}