{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./component-one/component-one.component\";\nexport let ManualChangeDetectionComponent = /*#__PURE__*/(() => {\n  class ManualChangeDetectionComponent {\n    constructor() {\n      this.attachOrDetachNotifier = new Subject();\n    }\n    attachOrDetachChangeDetector(attach) {\n      this.attachOrDetachNotifier.next(attach);\n    }\n  }\n  ManualChangeDetectionComponent.ɵfac = function ManualChangeDetectionComponent_Factory(t) {\n    return new (t || ManualChangeDetectionComponent)();\n  };\n  ManualChangeDetectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ManualChangeDetectionComponent,\n    selectors: [[\"manual-cd\"]],\n    decls: 21,\n    vars: 1,\n    consts: [[1, \"list\"], [3, \"click\"], [\"for\", \"toggle\"], [\"id\", \"toggle\", \"type\", \"checkbox\", 3, \"click\"], [\"attach\", \"\"], [1, \"tree\"], [3, \"notifier\"], [2, \"margin-bottom\", \"5em\", \"clear\", \"both\"]],\n    template: function ManualChangeDetectionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Manual Change Detection\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"p\");\n        i0.ɵɵtext(3, \"This demo shows how a change detector is detached from the change detector tree and performes change detection manually.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ol\", 0)(5, \"li\");\n        i0.ɵɵtext(6, \"The app is bootstrapped (reload browser to double-check)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"li\");\n        i0.ɵɵtext(8, \"The \\\"Trigger CD\\\" button is clicked\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\")(10, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ManualChangeDetectionComponent_Template_button_click_10_listener() {\n          return null;\n        });\n        i0.ɵɵtext(11, \"Trigger Change Detection\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"label\", 2)(13, \"input\", 3, 4);\n        i0.ɵɵlistener(\"click\", function ManualChangeDetectionComponent_Template_input_click_13_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(14);\n          return i0.ɵɵresetView(ctx.attachOrDetachChangeDetector(_r0.checked));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(15, \" Attach/Detach Change Detector \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 5)(17, \"ul\")(18, \"li\");\n        i0.ɵɵelement(19, \"cmp-one\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(20, \"div\", 7);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"notifier\", ctx.attachOrDetachNotifier);\n      }\n    },\n    dependencies: [i1.ComponentOne],\n    encapsulation: 2\n  });\n  return ManualChangeDetectionComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}